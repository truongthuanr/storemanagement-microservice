version: "3.9"

services:
  inventory-db:
    image: mysql:8.0
    container_name: inventory-db
    restart: no
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: inventory_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - inventory-db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 5

  inventory-service:
    build:
      context: ./inventory-service
    image: truongthuanr/inventory-service:latest
    container_name: inventory-service
    restart: no
    depends_on:
      - inventory-db
    environment:
      DB_HOST: inventory-db
      DB_PORT: 3306
      DB_NAME: inventory_db
      DB_USER: user
      DB_PASSWORD: password
      DATABASE_URL: mysql+pymysql://user:password@inventory-db:3306/inventory_db
      PYTHONPATH: /app
    ports:
      - "8001:8000"
      - "50051:50051"
    volumes:
      - ./inventory-service:/app
    command: ["./wait-for-it.sh", "inventory-db", "3306", "--", "python", "app/server.py"]

  product-db:
    image: mysql:8.0
    container_name: product-db
    restart: no
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: product_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3308:3306"
    volumes:
      - product-db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 5

  product-service:
    build:
      context: ./product-service
    image: truongthuanr/product-service:latest
    container_name: product-service
    restart: no
    depends_on:
      - inventory-service
    environment:
      DB_HOST: product-db
      DB_PORT: 3306
      DB_NAME: product_db
      DB_USER: user
      DB_PASSWORD: password
      DATABASE_URL: mysql+pymysql://user:password@product-db:3306/product_db
      INVENTORY_GRPC_HOST: inventory-service
      INVENTORY_GRPC_PORT: 50051
    ports:
      - "8002:8000"
    volumes:
      - ./product-service:/app
    command: ["./wait-for-it.sh", "product-db", "3306", "--", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

volumes:
  inventory-db-data:
  product-db-data:
